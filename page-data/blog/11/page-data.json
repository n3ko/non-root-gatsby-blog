{"componentChunkName":"component---src-templates-listing-tsx","path":"/blog/11","result":{"data":{"allMarkdownRemark":{"nodes":[{"excerpt":"<p>You can try to follow this post (<a href=\"https://itnext.io/how-to-build-a-blog-with-cogear-js-fd45a6cfbde1\">https://itnext.io/how-to-build-a-blog-with-cogear-js-fd45a6cfbde1</a>), but it isn't enough to make it a customized blog.</p>","frontmatter":{"title":"Cogear.js blog works for GitHub Pages too, but with many obstacles.","tag":["cogear","GitHub Pages"],"image":"https://i.imgur.com/53Ngcgc.png"},"correctedDateEpoch":1562000400000},{"excerpt":"<p>My gripe comes from the limitation with free tier and lower tiers of MongoDB Atlas. (<a href=\"https://www.quora.com/unanswered/Where-can-I-host-MongoDB-with-allowDiskUse-true\">Where can I host MongoDB with allowDiskUse=true?</a>) So, I have decided to host my own MongoDB on DigitalOcean.</p>\n","frontmatter":{"title":"Hosting MongoDB version 4 server on DigitalOcean","tag":["mongodb","digitalocean"],"image":"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSe5Mr66_-cGVpyv_4SIkxAx1h0thctF1Ri8th9kS86mWy20wuQ"},"correctedDateEpoch":1561914000000},{"excerpt":"<p>As I am creating <a href=\"https://github.com/patarapolw/memorable-password\">memorable-password</a> project, I am challenged on whether diceware-type passwords / memorable passwords are really strong.</p>\n<p>I learnt about Entropy and created (actually updated an old project) <a href=\"https://github.com/patarapolw/passwordstrength\">passwordstrength</a>.</p>\n<p>I formularized the concept on memorability based on pronounceability with NLTK and double metaphone -- <a href=\"https://github.com/patarapolw/pronounceable\">pronounceable</a>.</p>\n<p><a href=\"https://github.com/patarapolw/memorable-password/tree/master/analysis\">Here</a> is the result.</p>\n","frontmatter":{"title":"An Analysis on Password Strength vs. Memorability","tag":["password","nltk"],"image":"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTgSYPCYNS5GZ9ec5BU2WDjn9YbZ1F2nEGABnZAhXZtSUkikTjg"},"correctedDateEpoch":1519923600000},{"excerpt":"<p>I find that the issue may includes:-</p>\n<ul>\n<li>\n<p>Module dependencies</p>\n<ul>\n<li>This can be solved by using virtualenv since the very beginning of the project</li>\n</ul>\n</li>\n<li>\n<p>Different python version</p>\n<ul>\n<li>This can be managed very beautifully with tox</li>\n</ul>\n</li></ul>","frontmatter":{"title":"Sharing Python project that works in another computer!","tag":["python"],"image":"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSW4Ywh9fnwlOBcxAG8Mgg94zC55j3dYh1Y88YcB83wCjaBZVmA"},"correctedDateEpoch":1519664400000},{"excerpt":"<p>This is what I have got:</p>\n<pre><code class=\"language-python\">from ui.mainWindow import MainWindow\nfrom webview.controller import initServer\n\nfrom PyQt5.QtWidgets import *\nimport sys\nimport httplib2\nfrom time import sleep\n\nif __name__ == '__main__':\n    initServer().start()\n\n    h = httplib2.Http()\n    while True:\n        try:\n            resp = h.request(\"http://0.0.0.0:8080/\", 'HEAD')\n            break\n        except ConnectionRefusedError:\n            sleep(1)\n            continue\n\n    app = QApplication(sys.argv)\n    window = MainWindow()\n    window.showUI()\n    window.setBaseSize(1000, 600)\n    window.move(QDesktopWidget().rect().center().x()-window.rect().center().x(), window.rect().y())\n    sys.exit(app.exec_())\n</code></pre>\n","frontmatter":{"title":"[Python-web.py] Turning website into a desktop app","tag":["python","desktop","web.py","PyQt5"],"image":"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTHKVrds2fU5fqVnsmUwdOgNyOUIssq0aXpgit1vx8L6dK3B2_j"},"correctedDateEpoch":1518541200000}],"totalCount":59}},"pageContext":{"limit":5,"skip":50,"currentPage":11}}}