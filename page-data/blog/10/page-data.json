{"componentChunkName":"component---src-templates-listing-tsx","path":"/blog/10","result":{"data":{"allMarkdownRemark":{"nodes":[{"excerpt":"<p>Just don't install anything into System's programming languages, unless you have a virtual environment. Also, you can manage Python and Ruby's versions.</p>\n<p>For Python, <a href=\"https://github.com/pyenv/pyenv\">pyenv</a> and there is <a href=\"https://docs.python-guide.org/dev/virtualenvs/\">Virtual Environment</a>, which is quite opinionated. I use <a href=\"https://poetry.eustace.io/\">poetry</a>, though. I also tried to fit <code>/.venv/</code> into the project folder, which requires additional settings.</p>\n","frontmatter":{"title":"Python and Ruby is pre-installed in macOS, but ...","tag":["macOS","python","ruby","node.js","javascript"],"image":"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRzRPgFnsH3URbSEs5o9rM9BxY-JcGggifXVXEx7bsUVk3KW9QA"},"correctedDateEpoch":1562432400000},{"excerpt":"<p>Installing Linux is never hard on Windows, with supported hardwares, e.g. Dell, but on macOS, it is another beast; probably because of a very specific proprietary hardware -- main harddisk and cannot install additional internal harddisk. Furthermore, I have both macOS 11\" (2015) ad 13\" (2017) with different problems. After, it is never as easy as installing Windows.</p>\n","frontmatter":{"title":"Installing Linux on macOS MacBook Air -- Major Obstacles","tag":["linux","macOS"],"image":"https://miro.medium.com/max/3000/1*Qsu6s05Xepx3_YKmmviURg.png"},"correctedDateEpoch":1562346000000},{"excerpt":"<p>GitHub Pages, powered by Jekyll is great, but it lacks some useful features, mostly features that require a real database. Solutions? -- link to outside servers.</p>\n","frontmatter":{"title":"Additional features for GitHub Pages blog","tag":["GitHub Pages","Disqus","Jekyll","Travis CI"],"image":"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT9gKwkPcrFDuSH7LcaAnhMkpK1AVSVk6a9wDWauOY_J6CvKl2r"},"correctedDateEpoch":1562259600000},{"excerpt":"<p>As Electron is actually an containerized extended Chromium web engine, I reckon that this must be possible somehow. However, by default, Electron uses <code>ipcMain</code>/<code>ipcRenderer</code> rather than <code>http</code> or <code>websocket</code>...</p>\n<p>As for a lazy reader, you can see my example project at <a href=\"https://github.com/patarapolw/rep2recall-sqlite\">https://github.com/patarapolw/rep2recall-sqlite</a>, which is Python Flask in Electron. There is also a pure TypeScript version -- <a href=\"https://github.com/patarapolw/e-rep2recall\">https://github.com/patarapolw/e-rep2recall</a></p>\n","frontmatter":{"title":"Create an Electron app from any web server in any programming language.","tag":["electron","web server","pinned"],"image":"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRMQFZ9SzNkt7LXFk6YgFPaVLs7tA2dZoM0tJokNVNz7q7Mi5Qa"},"correctedDateEpoch":1562173200000},{"excerpt":"<p>Right now, I only know one website that allows me to host HTML as full webpage that supports static JavaScript, that is <a href=\"https://pages.github.com\">GitHub Pages</a>, which might not be truly static, if you have some good API supported in the background, e.g. Disqus, or Heroku.</p>\n","frontmatter":{"title":"GitHub Pages as blog Combo","tag":["GitHub Pages","blogging"],"image":"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRqbDL-RdwO45w24ZeCv-N5bQAZxXOnd2nbCpymQvswWr4exu6K"},"correctedDateEpoch":1562086800000}],"totalCount":59}},"pageContext":{"limit":5,"skip":45,"currentPage":10}}}